@kotlin.Metadata()
@java.lang.annotation.Retention(value = java.lang.annotation.RetentionPolicy.RUNTIME)
public abstract @interface Anno {

    public abstract java.lang.Class<?> a();

    public abstract java.lang.Class<?>[] b();

    public abstract java.lang.Class<?>[] c();

    public abstract java.lang.Class<?>[] d();
}

////////////////////


@kotlin.Metadata()
public final class MyType<T extends java.lang.Object> {

    public MyType() {
        super();
    }
}

////////////////////


@kotlin.Metadata()
@kotlin.Suppress(names = {"UNRESOLVED_REFERENCE", "ANNOTATION_ARGUMENT_MUST_BE_CONST", "NON_CONST_VAL_USED_IN_CONSTANT_EXPRESSION", "UNSUPPORTED_FEATURE"})
public final class NonExistentClassTypesConversionKt {
}

////////////////////


@kotlin.Metadata()
@Anno(a = Blah.class, b = {NoFoo1.class, NoBar1.class}, c = {NoFoo2.class, java.lang.String.class}, d = {boolean.class, NoBar3.class})
public final class Test<G extends java.lang.Object> {
    public ABC a;
    private final ABC b = null;
    @org.jetbrains.annotations.Nullable()
    private final java.util.List<ABC> c = null;
    @org.jetbrains.annotations.Nullable()
    private final java.util.List<java.util.Map<BCD, ABC<java.util.List<BCD>>>> d = null;
    public java.util.List<java.util.Map<? extends ABC, BCD>> e;
    public ABC<?> f;
    public java.util.List<?> g;
    public ABC<java.lang.Integer, java.lang.String> h;
    public kotlin.jvm.functions.Function2<ABC, java.util.List<? extends BCD>, CDE> i;
    public kotlin.jvm.functions.Function0<CDE> j;
    public kotlin.jvm.functions.Function2<ABC, java.util.List<? extends BCD>, CDE> k;
    public ABC.BCD.EFG l;
    public ABC coocoo;
    public ABC<java.lang.String> coocoo2;
    public ABC<ABC> coocoo21;
    public ABC<java.lang.String, java.lang.String> coocoo3;
    public ABC<java.lang.String, ABC<ABC>> coocoo31;
    public ABC nested;
    private final error.NonExistentClass m = null;
    @org.jetbrains.annotations.NotNull()
    private final java.lang.String n = "";
    public java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<ABC>>>>>>>>>> o11;
    public java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<ABC>>>>>>>>> o10;
    public java.util.Calendar.Builder p;

    public Test() {
        super();
    }

    public final ABC getA() {
        return null;
    }

    public final void setA(ABC p0) {
    }

    public final ABC getB() {
        return null;
    }

    @org.jetbrains.annotations.Nullable()
    public final java.util.List<ABC> getC() {
        return null;
    }

    @org.jetbrains.annotations.Nullable()
    public final java.util.List<java.util.Map<BCD, ABC<java.util.List<BCD>>>> getD() {
        return null;
    }

    @org.jetbrains.annotations.NotNull()
    public final java.util.List<java.util.Map<? extends ABC, BCD>> getE() {
        return null;
    }

    public final void setE(@org.jetbrains.annotations.NotNull()
    java.util.List<? extends java.util.Map<? extends ABC, ? extends BCD>> p0) {
    }

    public final ABC<?> getF() {
        return null;
    }

    public final void setF(ABC<?> p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final java.util.List<?> getG() {
        return null;
    }

    public final void setG(@org.jetbrains.annotations.NotNull()
    java.util.List<?> p0) {
    }

    public final ABC<java.lang.Integer, java.lang.String> getH() {
        return null;
    }

    public final void setH(ABC<java.lang.Integer, java.lang.String> p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final kotlin.jvm.functions.Function2<ABC, java.util.List<? extends BCD>, CDE> getI() {
        return null;
    }

    public final void setI(@org.jetbrains.annotations.NotNull()
    kotlin.jvm.functions.Function2<? super ABC, ? super java.util.List<? extends BCD>, ? extends CDE> p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final kotlin.jvm.functions.Function0<CDE> getJ() {
        return null;
    }

    public final void setJ(@org.jetbrains.annotations.NotNull()
    kotlin.jvm.functions.Function0<? extends CDE> p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final kotlin.jvm.functions.Function2<ABC, java.util.List<? extends BCD>, CDE> getK() {
        return null;
    }

    public final void setK(@org.jetbrains.annotations.NotNull()
    kotlin.jvm.functions.Function2<? super ABC, ? super java.util.List<? extends BCD>, ? extends CDE> p0) {
    }

    public final ABC.BCD.EFG getL() {
        return null;
    }

    public final void setL(ABC.BCD.EFG p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final ABC getCoocoo() {
        return null;
    }

    public final void setCoocoo(@org.jetbrains.annotations.NotNull()
    ABC p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final ABC<java.lang.String> getCoocoo2() {
        return null;
    }

    public final void setCoocoo2(@org.jetbrains.annotations.NotNull()
    ABC<java.lang.String> p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final ABC<ABC> getCoocoo21() {
        return null;
    }

    public final void setCoocoo21(@org.jetbrains.annotations.NotNull()
    ABC<ABC> p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final ABC<java.lang.String, java.lang.String> getCoocoo3() {
        return null;
    }

    public final void setCoocoo3(@org.jetbrains.annotations.NotNull()
    ABC<java.lang.String, java.lang.String> p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final ABC<java.lang.String, ABC<ABC>> getCoocoo31() {
        return null;
    }

    public final void setCoocoo31(@org.jetbrains.annotations.NotNull()
    ABC<java.lang.String, ABC<ABC>> p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final ABC getNested() {
        return null;
    }

    public final void setNested(@org.jetbrains.annotations.NotNull()
    ABC p0) {
    }

    public final error.NonExistentClass getM() {
        return null;
    }

    @org.jetbrains.annotations.NotNull()
    public final java.lang.String getN() {
        return null;
    }

    @org.jetbrains.annotations.NotNull()
    public final java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<ABC>>>>>>>>>> getO11() {
        return null;
    }

    public final void setO11(@org.jetbrains.annotations.NotNull()
    java.util.List<? extends java.util.List<? extends java.util.List<? extends java.util.List<? extends java.util.List<? extends java.util.List<? extends java.util.List<? extends java.util.List<? extends java.util.List<? extends java.util.List<? extends ABC>>>>>>>>>> p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<java.util.List<ABC>>>>>>>>> getO10() {
        return null;
    }

    public final void setO10(@org.jetbrains.annotations.NotNull()
    java.util.List<? extends java.util.List<? extends java.util.List<? extends java.util.List<? extends java.util.List<? extends java.util.List<? extends java.util.List<? extends java.util.List<? extends java.util.List<? extends ABC>>>>>>>>> p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final java.util.Calendar.Builder getP() {
        return null;
    }

    public final void setP(@org.jetbrains.annotations.NotNull()
    java.util.Calendar.Builder p0) {
    }

    public final BCD f1(ABC a) {
        return null;
    }

    public final <T extends java.lang.Object>void f2(ABC<java.lang.String, java.lang.Integer, kotlin.jvm.functions.Function0<BCD>> a) {
    }

    public final <T extends java.lang.Object>long f3(ABC a, int b) {
        return 0L;
    }

    public final error.NonExistentClass f4() {
        return null;
    }

    @org.jetbrains.annotations.Nullable()
    public final <T extends java.lang.Object>java.lang.Class<java.lang.Enum<?>> f5(@org.jetbrains.annotations.NotNull()
    MyType<T> $this$f5) {
        return null;
    }
}
