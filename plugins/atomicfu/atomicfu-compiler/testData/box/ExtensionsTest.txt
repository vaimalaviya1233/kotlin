@kotlin.Metadata
public final class ExtensionsTest {
    // source: 'ExtensionsTest.kt'
    private final static @org.jetbrains.annotations.NotNull field a$volatile$FU: java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    private volatile field a$volatile: int
    private final static @org.jetbrains.annotations.NotNull field b$volatile$FU: java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    private volatile field b$volatile: int
    private final static @org.jetbrains.annotations.NotNull field l$volatile$FU: java.util.concurrent.atomic.AtomicLongFieldUpdater
    private volatile field l$volatile: long
    private final static @org.jetbrains.annotations.NotNull field s$volatile$FU: java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    private volatile @org.jetbrains.annotations.Nullable field s$volatile: java.lang.Object
    static method <clinit>(): void
    public method <init>(): void
    public final method booleanExtensionArithmetic$atomicfu$array(@org.jetbrains.annotations.Nullable p0: java.lang.Object, @org.jetbrains.annotations.NotNull p1: java.util.concurrent.atomic.AtomicIntegerArray, p2: int): void
    public final method booleanExtensionArithmetic$atomicfu(@org.jetbrains.annotations.Nullable p0: java.lang.Object, @org.jetbrains.annotations.NotNull p1: java.util.concurrent.atomic.AtomicIntegerFieldUpdater): void
    public final static @org.jetbrains.annotations.NotNull method getA$volatile$FU(): java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    public final method getA$volatile(): int
    public final static @org.jetbrains.annotations.NotNull method getB$volatile$FU(): java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    public final method getB$volatile(): int
    public final static @org.jetbrains.annotations.NotNull method getL$volatile$FU(): java.util.concurrent.atomic.AtomicLongFieldUpdater
    public final method getL$volatile(): long
    public final static @org.jetbrains.annotations.NotNull method getS$volatile$FU(): java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    public final @org.jetbrains.annotations.Nullable method getS$volatile(): java.lang.Object
    public final method intExtensionArithmetic$atomicfu$array(@org.jetbrains.annotations.Nullable p0: java.lang.Object, @org.jetbrains.annotations.NotNull p1: java.util.concurrent.atomic.AtomicIntegerArray, p2: int): void
    public final method intExtensionArithmetic$atomicfu(@org.jetbrains.annotations.Nullable p0: java.lang.Object, @org.jetbrains.annotations.NotNull p1: java.util.concurrent.atomic.AtomicIntegerFieldUpdater): void
    public final method longExtensionArithmetic$atomicfu$array(@org.jetbrains.annotations.Nullable p0: java.lang.Object, @org.jetbrains.annotations.NotNull p1: java.util.concurrent.atomic.AtomicLongArray, p2: int): void
    public final method longExtensionArithmetic$atomicfu(@org.jetbrains.annotations.Nullable p0: java.lang.Object, @org.jetbrains.annotations.NotNull p1: java.util.concurrent.atomic.AtomicLongFieldUpdater): void
    public final method refExtension$atomicfu$array(@org.jetbrains.annotations.Nullable p0: java.lang.Object, @org.jetbrains.annotations.NotNull p1: java.util.concurrent.atomic.AtomicReferenceArray, p2: int): void
    public final method refExtension$atomicfu(@org.jetbrains.annotations.Nullable p0: java.lang.Object, @org.jetbrains.annotations.NotNull p1: java.util.concurrent.atomic.AtomicReferenceFieldUpdater): void
    public final method setA$volatile(p0: int): void
    public final method setB$volatile(p0: int): void
    public final method setL$volatile(p0: long): void
    public final method setS$volatile(@org.jetbrains.annotations.Nullable p0: java.lang.Object): void
    public final method testExtension(): void
    public final method testScopedFieldGetters(): void
}

@kotlin.Metadata
public final class ExtensionsTestKt {
    // source: 'ExtensionsTest.kt'
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
}
