@kotlin.Metadata
public final class ANode {
    // source: 'TopLevelTest.kt'
    private final field b: java.lang.Object
    public method <init>(p0: java.lang.Object): void
    public final method component1(): java.lang.Object
    public synthetic static method copy$default(p0: ANode, p1: java.lang.Object, p2: int, p3: java.lang.Object): ANode
    public final @org.jetbrains.annotations.NotNull method copy(p0: java.lang.Object): ANode
    public method equals(@org.jetbrains.annotations.Nullable p0: java.lang.Object): boolean
    public final method getB(): java.lang.Object
    public method hashCode(): int
    public @org.jetbrains.annotations.NotNull method toString(): java.lang.String
}

@kotlin.Metadata
public final class BNode {
    // source: 'TopLevelTest.kt'
    private final field c: java.lang.Object
    public method <init>(p0: java.lang.Object): void
    public final method component1(): java.lang.Object
    public synthetic static method copy$default(p0: BNode, p1: java.lang.Object, p2: int, p3: java.lang.Object): BNode
    public final @org.jetbrains.annotations.NotNull method copy(p0: java.lang.Object): BNode
    public method equals(@org.jetbrains.annotations.Nullable p0: java.lang.Object): boolean
    public final method getC(): java.lang.Object
    public method hashCode(): int
    public @org.jetbrains.annotations.NotNull method toString(): java.lang.String
}

@kotlin.Metadata
public final class CNode {
    // source: 'TopLevelTest.kt'
    private final field d: int
    public method <init>(p0: int): void
    public final method component1(): int
    public synthetic static method copy$default(p0: CNode, p1: int, p2: int, p3: java.lang.Object): CNode
    public final @org.jetbrains.annotations.NotNull method copy(p0: int): CNode
    public method equals(@org.jetbrains.annotations.Nullable p0: java.lang.Object): boolean
    public final method getD(): int
    public method hashCode(): int
    public @org.jetbrains.annotations.NotNull method toString(): java.lang.String
}

@kotlin.Metadata
public final class TopLevelArrayTest {
    // source: 'TopLevelTest.kt'
    public method <init>(): void
    public final method testBooleanArray(): void
    public final method testIntArray(): void
    public final method testLongArray(): void
    public final method testRefArray(): void
}

@kotlin.Metadata
public final class TopLevelPrimitiveTest {
    // source: 'TopLevelTest.kt'
    public method <init>(): void
    public final method testTopLevelArrayOfNulls(): void
    public final method testTopLevelBoolean(): void
    public final method testTopLevelInt(): void
    public final method testTopLevelLong(): void
    public final method testTopLevelRef(): void
}

@kotlin.Metadata
final class TopLevelTest$VolatileWrapper$atomicfu {
    // source: 'TopLevelTest.kt'
    private final static @org.jetbrains.annotations.NotNull field a$volatile$FU: java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    private volatile field a$volatile: int
    private final static @org.jetbrains.annotations.NotNull field abcNode$volatile$FU: java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    private volatile @org.jetbrains.annotations.Nullable field abcNode$volatile: java.lang.Object
    private final static @org.jetbrains.annotations.NotNull field any$volatile$FU: java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    private volatile @org.jetbrains.annotations.Nullable field any$volatile: java.lang.Object
    private final static @org.jetbrains.annotations.NotNull field b$volatile$FU: java.util.concurrent.atomic.AtomicLongFieldUpdater
    private volatile field b$volatile: long
    private final static @org.jetbrains.annotations.NotNull field c$volatile$FU: java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    private volatile field c$volatile: int
    static method <clinit>(): void
    private method <init>(): void
    public synthetic method <init>(p0: kotlin.jvm.internal.DefaultConstructorMarker): void
    public synthetic final static method access$getA$volatile$FU$p(): java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    public synthetic final static method access$getAbcNode$volatile$FU$p(): java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    public synthetic final static method access$getAny$volatile$FU$p(): java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    public synthetic final static method access$getB$volatile$FU$p(): java.util.concurrent.atomic.AtomicLongFieldUpdater
    public synthetic final static method access$getC$volatile$FU$p(): java.util.concurrent.atomic.AtomicIntegerFieldUpdater
}

@kotlin.Metadata
public final class TopLevelTestKt {
    // source: 'TopLevelTest.kt'
    private final static @org.jetbrains.annotations.NotNull field anyRefArr: java.util.concurrent.atomic.AtomicReferenceArray
    private final static @org.jetbrains.annotations.NotNull field booleanArr: java.util.concurrent.atomic.AtomicIntegerArray
    private final static @org.jetbrains.annotations.NotNull field intArr: java.util.concurrent.atomic.AtomicIntegerArray
    private final static @org.jetbrains.annotations.NotNull field longArr: java.util.concurrent.atomic.AtomicLongArray
    private final static @org.jetbrains.annotations.NotNull field refArr: java.util.concurrent.atomic.AtomicReferenceArray
    private final static @org.jetbrains.annotations.NotNull field stringAtomicNullArr: java.util.concurrent.atomic.AtomicReferenceArray
    private final static @org.jetbrains.annotations.NotNull field topLevelTest$VolatileWrapper$atomicfu: TopLevelTest$VolatileWrapper$atomicfu
    static method <clinit>(): void
    public synthetic final static method access$getBooleanArr$p(): java.util.concurrent.atomic.AtomicIntegerArray
    public synthetic final static method access$getIntArr$p(): java.util.concurrent.atomic.AtomicIntegerArray
    public synthetic final static method access$getLongArr$p(): java.util.concurrent.atomic.AtomicLongArray
    public synthetic final static method access$getRefArr$p(): java.util.concurrent.atomic.AtomicReferenceArray
    public synthetic final static method access$getStringAtomicNullArr$p(): java.util.concurrent.atomic.AtomicReferenceArray
    public synthetic final static method access$getTopLevelTest$VolatileWrapper$atomicfu$p(): TopLevelTest$VolatileWrapper$atomicfu
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
}
