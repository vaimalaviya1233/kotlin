@kotlin.Metadata
public final class LoopTest$A {
    // source: 'LoopTest.kt'
    private final @org.jetbrains.annotations.NotNull field s: java.lang.String
    public method <init>(@org.jetbrains.annotations.NotNull p0: java.lang.String): void
    public final @org.jetbrains.annotations.NotNull method getS(): java.lang.String
    public final inner class LoopTest$A
}

@kotlin.Metadata
public final class LoopTest {
    // source: 'LoopTest.kt'
    private final static @org.jetbrains.annotations.NotNull field a$volatile$FU: java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    private volatile field a$volatile: int
    private final static @org.jetbrains.annotations.NotNull field a1$volatile$FU: java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    private volatile field a1$volatile: int
    private final static @org.jetbrains.annotations.NotNull field b$volatile$FU: java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    private volatile field b$volatile: int
    private final static @org.jetbrains.annotations.NotNull field l$volatile$FU: java.util.concurrent.atomic.AtomicLongFieldUpdater
    private volatile field l$volatile: long
    private final static @org.jetbrains.annotations.NotNull field r$volatile$FU: java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    private volatile @org.jetbrains.annotations.Nullable field r$volatile: java.lang.Object
    private final static @org.jetbrains.annotations.NotNull field rs$volatile$FU: java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    private volatile @org.jetbrains.annotations.Nullable field rs$volatile: java.lang.Object
    static method <clinit>(): void
    public method <init>(): void
    public final method atomicfuBooleanLoopTest(): void
    public final method atomicfuGetAndUpdateTest(): void
    public final method atomicfuIntLoopTest(): void
    public final method atomicfuLongLoopTest(): void
    public final method atomicfuLoopTest(): void
    public final method atomicfuRefLoopTest(): void
    public final method atomicfuUpdateAndGetTest(): void
    public final method atomicfuUpdateTest(): void
    public final static @org.jetbrains.annotations.NotNull method getA$volatile$FU(): java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    public final method getA$volatile(): int
    public final static @org.jetbrains.annotations.NotNull method getA1$volatile$FU(): java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    public final method getA1$volatile(): int
    private final method getAndUpdate$atomicfu(p0: java.util.concurrent.atomic.AtomicIntegerFieldUpdater, p1: kotlin.jvm.functions.Function1, p2: java.lang.Object): int
    private final method getAndUpdate$atomicfu(p0: java.util.concurrent.atomic.AtomicLongFieldUpdater, p1: kotlin.jvm.functions.Function1, p2: java.lang.Object): long
    private final method getAndUpdate$atomicfu(p0: java.util.concurrent.atomic.AtomicReferenceFieldUpdater, p1: kotlin.jvm.functions.Function1, p2: java.lang.Object): java.lang.Object
    public final static @org.jetbrains.annotations.NotNull method getB$volatile$FU(): java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    public final method getB$volatile(): int
    public final static @org.jetbrains.annotations.NotNull method getL$volatile$FU(): java.util.concurrent.atomic.AtomicLongFieldUpdater
    public final method getL$volatile(): long
    public final static @org.jetbrains.annotations.NotNull method getR$volatile$FU(): java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    public final @org.jetbrains.annotations.Nullable method getR$volatile(): java.lang.Object
    public final static @org.jetbrains.annotations.NotNull method getRs$volatile$FU(): java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    public final @org.jetbrains.annotations.Nullable method getRs$volatile(): java.lang.Object
    private final method loop$atomicfu(p0: java.util.concurrent.atomic.AtomicIntegerFieldUpdater, p1: kotlin.jvm.functions.Function1, p2: java.lang.Object): void
    private final method loop$atomicfu(p0: java.util.concurrent.atomic.AtomicLongFieldUpdater, p1: kotlin.jvm.functions.Function1, p2: java.lang.Object): void
    private final method loop$atomicfu(p0: java.util.concurrent.atomic.AtomicReferenceFieldUpdater, p1: kotlin.jvm.functions.Function1, p2: java.lang.Object): void
    public final method setA$volatile(p0: int): void
    public final method setA1$volatile(p0: int): void
    public final method setB$volatile(p0: int): void
    public final method setL$volatile(p0: long): void
    public final method setR$volatile(@org.jetbrains.annotations.Nullable p0: java.lang.Object): void
    public final method setRs$volatile(@org.jetbrains.annotations.Nullable p0: java.lang.Object): void
    private final method update$atomicfu(p0: java.util.concurrent.atomic.AtomicIntegerFieldUpdater, p1: kotlin.jvm.functions.Function1, p2: java.lang.Object): void
    private final method update$atomicfu(p0: java.util.concurrent.atomic.AtomicLongFieldUpdater, p1: kotlin.jvm.functions.Function1, p2: java.lang.Object): void
    private final method update$atomicfu(p0: java.util.concurrent.atomic.AtomicReferenceFieldUpdater, p1: kotlin.jvm.functions.Function1, p2: java.lang.Object): void
    private final method updateAndGet$atomicfu(p0: java.util.concurrent.atomic.AtomicIntegerFieldUpdater, p1: kotlin.jvm.functions.Function1, p2: java.lang.Object): int
    private final method updateAndGet$atomicfu(p0: java.util.concurrent.atomic.AtomicLongFieldUpdater, p1: kotlin.jvm.functions.Function1, p2: java.lang.Object): long
    private final method updateAndGet$atomicfu(p0: java.util.concurrent.atomic.AtomicReferenceFieldUpdater, p1: kotlin.jvm.functions.Function1, p2: java.lang.Object): java.lang.Object
    public final inner class LoopTest$A
}

@kotlin.Metadata
public final class LoopTestKt {
    // source: 'LoopTest.kt'
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
}
