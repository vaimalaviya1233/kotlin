/*
 * Copyright 2010-2023 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.analysis.low.level.api.fir;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.analysis.api.GenerateAnalysisApiTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("analysis/low-level-api-fir/testdata/codeFragments/compilation")
@TestDataPath("$PROJECT_ROOT")
public class CodeFragmentCompilationTestGenerated extends AbstractCodeFragmentCompilationTest {
    @Test
    public void testAllFilesPresentInCompilation() throws Exception {
        KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/low-level-api-fir/testdata/codeFragments/compilation"), Pattern.compile("^([^.]+)\\.kt$"), null, true);
    }

    @Test
    @TestMetadata("customName.kt")
    public void testCustomName() throws Exception {
        runTest("analysis/low-level-api-fir/testdata/codeFragments/compilation/customName.kt");
    }

    @Test
    @TestMetadata("inlineFunctionUsage.kt")
    public void testInlineFunctionUsage() throws Exception {
        runTest("analysis/low-level-api-fir/testdata/codeFragments/compilation/inlineFunctionUsage.kt");
    }

    @Test
    @TestMetadata("inlineFunctionUsageSource.kt")
    public void testInlineFunctionUsageSource() throws Exception {
        runTest("analysis/low-level-api-fir/testdata/codeFragments/compilation/inlineFunctionUsageSource.kt");
    }

    @Test
    @TestMetadata("simple.kt")
    public void testSimple() throws Exception {
        runTest("analysis/low-level-api-fir/testdata/codeFragments/compilation/simple.kt");
    }

    @Nested
    @TestMetadata("analysis/low-level-api-fir/testdata/codeFragments/compilation/capturing")
    @TestDataPath("$PROJECT_ROOT")
    public class Capturing {
        @Test
        public void testAllFilesPresentInCapturing() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/low-level-api-fir/testdata/codeFragments/compilation/capturing"), Pattern.compile("^([^.]+)\\.kt$"), null, true);
        }

        @Test
        @TestMetadata("contextReceiver.kt")
        public void testContextReceiver() throws Exception {
            runTest("analysis/low-level-api-fir/testdata/codeFragments/compilation/capturing/contextReceiver.kt");
        }

        @Test
        @TestMetadata("contextReceiverExplicit.kt")
        public void testContextReceiverExplicit() throws Exception {
            runTest("analysis/low-level-api-fir/testdata/codeFragments/compilation/capturing/contextReceiverExplicit.kt");
        }

        @Test
        @TestMetadata("extensionReceiver.kt")
        public void testExtensionReceiver() throws Exception {
            runTest("analysis/low-level-api-fir/testdata/codeFragments/compilation/capturing/extensionReceiver.kt");
        }

        @Test
        @TestMetadata("extensionReceiverExplicit.kt")
        public void testExtensionReceiverExplicit() throws Exception {
            runTest("analysis/low-level-api-fir/testdata/codeFragments/compilation/capturing/extensionReceiverExplicit.kt");
        }

        @Test
        @TestMetadata("extensionReceiverLabeled.kt")
        public void testExtensionReceiverLabeled() throws Exception {
            runTest("analysis/low-level-api-fir/testdata/codeFragments/compilation/capturing/extensionReceiverLabeled.kt");
        }

        @Test
        @TestMetadata("initializer.kt")
        public void testInitializer() throws Exception {
            runTest("analysis/low-level-api-fir/testdata/codeFragments/compilation/capturing/initializer.kt");
        }

        @Test
        @TestMetadata("local.kt")
        public void testLocal() throws Exception {
            runTest("analysis/low-level-api-fir/testdata/codeFragments/compilation/capturing/local.kt");
        }

        @Test
        @TestMetadata("localFunction.kt")
        public void testLocalFunction() throws Exception {
            runTest("analysis/low-level-api-fir/testdata/codeFragments/compilation/capturing/localFunction.kt");
        }

        @Test
        @TestMetadata("localMutated.kt")
        public void testLocalMutated() throws Exception {
            runTest("analysis/low-level-api-fir/testdata/codeFragments/compilation/capturing/localMutated.kt");
        }

        @Test
        @TestMetadata("nestedOuterClass.kt")
        public void testNestedOuterClass() throws Exception {
            runTest("analysis/low-level-api-fir/testdata/codeFragments/compilation/capturing/nestedOuterClass.kt");
        }

        @Test
        @TestMetadata("outerClass.kt")
        public void testOuterClass() throws Exception {
            runTest("analysis/low-level-api-fir/testdata/codeFragments/compilation/capturing/outerClass.kt");
        }

        @Test
        @TestMetadata("outerClassMutated.kt")
        public void testOuterClassMutated() throws Exception {
            runTest("analysis/low-level-api-fir/testdata/codeFragments/compilation/capturing/outerClassMutated.kt");
        }

        @Test
        @TestMetadata("valueParameter.kt")
        public void testValueParameter() throws Exception {
            runTest("analysis/low-level-api-fir/testdata/codeFragments/compilation/capturing/valueParameter.kt");
        }
    }
}
